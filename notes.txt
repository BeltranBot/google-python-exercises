s.lower(), s.upper() -- returns the lowercase or uppercase version of the string
s.strip() -- returns a string with whitespace removed from the start and end
s.isalpha()/s.isdigit()/s.isspace()... -- tests if all the string chars are in the various character classes
s.startswith('other'), s.endswith('other') -- tests if the string starts or ends with the given other string
s.find('other') -- searches for the given other string (not a regular expression) within s, and returns the first index where it begins or -1 if not found
s.replace('old', 'new') -- returns a string where all occurrences of 'old' have been replaced by 'new'
s.split('delim') -- returns a list of substrings separated by the given delimiter.
The delimiter is not a regular expression, it's just text. 'aaa,bbb,ccc'.split(',') -> ['aaa', 'bbb', 'ccc'].
As a convenient special case s.split() (with no arguments) splits on all whitespace chars.
s.join(list) -- opposite of split(), joins the elements in the given list together using the string as the delimiter. e.g. '---'.join(['aaa', 'bbb', 'ccc']) -> aaa---bbb---ccc

ist.append(elem) -- adds a single element to the end of the list.
Common error: does not return the new list, just modifies the original.
list.insert(index, elem) -- inserts the element at the given index,
shifting elements to the right.
list.extend(list2) adds the elements in list2 to the end of the list.
Using + or += on a list is similar to using extend().
list.index(elem) -- searches for the given element from the start of the list and
returns its index. Throws a ValueError if the element does not appear
(use "in" to check without a ValueError).
list.remove(elem) -- searches for the first instance of the given element and
removes it (throws ValueError if not present)
list.sort() -- sorts the list in place (does not return it).
(The sorted() function shown below is preferred.)
list.reverse() -- reverses the list in place (does not return it)
list.pop(index) -- removes and returns the element at the given index.
Returns the rightmost element if index is omitted (roughly the opposite of append()).